dataAccess.DataAccess#createQuestion(Ldomain/Event;Ljava/lang/String;F)Ldomain/Question;
java.util.ResourceBundle#getString(Ljava/lang/String;)Ljava/lang/String;
exceptions.QuestionAlreadyExist#<init>(Ljava/lang/String;)V
java.util.ResourceBundle#getBundle(Ljava/lang/String;)Ljava/util/ResourceBundle;
exceptions.QuestionAlreadyExist#instance-init#
==
persist javax.persistence.EntityManager#persist(Ljava/lang/Object;)V
println java.io.PrintStream#println(Ljava/lang/String;)V
DoesQuestionExists domain.Event#DoesQuestionExists(Ljava/lang/String;)Z
begin javax.persistence.EntityTransaction#begin()V
getTransaction javax.persistence.EntityManager#getTransaction()Ljavax/persistence/EntityTransaction;
find javax.persistence.EntityManager#find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
getEventNumber domain.Event#getEventNumber()Ljava/lang/Integer;
addQuestion domain.Event#addQuestion(Ljava/lang/String;D)Ldomain/Question;
commit javax.persistence.EntityTransaction#commit()V